//Aubrey Jenkins
//CSCI371
//This Program acts as a minicomplier for some language out there
//it takes ASSUMED input ASSUMED to be uppercase and translates it into number codes
//DONT PUT IN LITTLE LETTERS WONT GIve ThE RigHt ReSuLtS SO DONT BREAK MY CODE
//BUT FORREAL DONT HAVE A TEST CASE WITH LITTLE LETTER I DID NOT FEEL LIKE PROGRAMMING FOR THE USER BEING STUPID EVEN THOUGH ITS LIKE ONE LINE
#include<iostream>
#include<cstring>
#include<string>
using namespace std;
int main()
{
  //This is the finite state table representing the finite number of states
// it goes [states][category]
int st[68][36]=
{
{43,44,43,8,43,13,40,43,43,16,43,43,43,43,1,36,43,18,25,46,47,48,49,51,63,53,55,57,59,61,60,58,0,66,66,67},
{43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,2,43,43,43,46,47,48,49,51,63,53,55,57,59,61,60,58,0,66,43,67},
{43,43,43,43,43,43,43,43,43,43,43,43,43,3,43,43,43,43,43,46,47,48,49,51,63,53,55,57,59,61,60,58,0,66,43,67},
{43,43,43,43,43,43,43,4,43,43,43,43,43,43,43,43,43,43,43,46,47,48,49,51,63,53,55,57,59,61,60,58,0,66,43,67},
{43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,5,43,43,43,46,47,48,49,51,63,53,55,57,59,61,60,58,0,66,43,67},
{43,43,6,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,46,47,48,49,51,63,53,55,57,59,61,60,58,0,66,43,67},
{43,43,43,43,43,43,43,43,43,43,43,7,43,43,43,43,43,43,43,46,47,48,49,51,63,53,55,57,59,61,60,58,0,66,43,67},
{43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,46,47,48,49,51,63,53,55,57,59,61,60,58,0,66,43,67},
{43,43,43,43,43,9,43,43,43,43,43,43,43,43,43,43,43,43,43,46,47,48,49,51,63,53,55,57,59,61,60,58,0,66,43,67},
{43,43,43,43,43,43,43,10,43,43,43,43,43,43,43,43,43,43,43,46,47,48,49,51,63,53,55,57,59,61,60,58,0,66,43,67},
{43,43,43,43,43,43,43,43,43,11,43,43,43,43,43,43,43,43,43,46,47,48,49,51,63,53,55,57,59,61,60,58,0,66,43,67},
{43,43,43,43,43,43,43,43,43,43,43,43,12,43,43,43,43,43,43,46,47,48,49,51,63,53,55,57,59,61,60,58,0,66,43,67},
{43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,46,47,48,49,51,63,53,55,57,59,61,60,58,0,66,43,67},
{43,43,43,43,43,43,43,43,43,43,22,43,14,43,43,43,43,43,43,46,47,48,49,51,63,53,55,57,59,61,60,58,0,66,43,67},
{43,43,43,43,15,43,43,43,43,43,43,43,43,43,43,43,43,43,43,46,47,48,49,51,63,53,55,57,59,61,60,58,0,66,43,67},
{43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,46,47,48,49,51,63,53,55,57,59,61,60,58,0,66,43,67},
{43,43,43,43,43,43,17,43,43,43,43,43,30,43,43,43,43,43,43,46,47,48,49,51,63,53,55,57,59,61,60,58,0,66,43,67},
{43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,46,47,48,49,51,63,53,55,57,59,61,60,58,0,66,43,67},
{43,43,43,43,43,43,43,43,19,43,43,43,43,43,43,43,43,43,43,46,47,48,49,51,63,53,55,57,59,61,60,58,0,66,43,67},
{43,43,43,43,43,20,43,43,43,43,43,43,43,43,43,43,43,43,43,46,47,48,49,51,63,53,55,57,59,61,60,58,0,66,43,67},
{43,43,43,43,43,43,43,43,43,43,43,43,21,43,43,43,43,43,43,46,47,48,49,51,63,53,55,57,59,61,60,58,0,66,43,67},
{43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,46,47,48,49,51,63,53,55,57,59,61,60,58,0,66,43,67},
{43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,23,43,43,46,47,48,49,51,63,53,55,57,59,61,60,58,0,66,43,67},
{43,43,43,43,43,24,43,43,43,43,43,43,43,43,43,43,43,43,43,46,47,48,49,51,63,53,55,57,59,61,60,58,0,66,43,67},
{43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,46,47,48,49,51,63,53,55,57,59,61,60,58,0,66,43,67},
{43,43,43,43,43,43,43,43,26,43,43,43,43,43,43,43,43,43,43,46,47,48,49,51,63,53,55,57,59,61,60,58,0,66,43,67},
{43,43,43,43,43,43,43,43,43,27,43,43,43,43,43,43,43,43,43,46,47,48,49,51,63,53,55,57,59,61,60,58,0,66,43,67},
{43,43,43,43,43,43,43,43,43,43,28,43,43,43,43,43,43,43,43,46,47,48,49,51,63,53,55,57,59,61,60,58,0,66,43,67},
{43,43,43,43,43,29,43,43,43,43,43,43,43,43,43,43,43,43,43,46,47,48,49,51,63,53,55,57,59,61,60,58,0,66,43,67},
{43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,46,47,48,49,51,63,53,55,57,59,61,60,58,0,66,43,67},
{43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,31,43,46,47,48,49,51,63,53,55,57,59,61,60,58,0,66,43,67},
{43,43,43,43,43,32,43,43,43,43,43,43,43,43,43,43,43,43,43,46,47,48,49,51,63,53,55,57,59,61,60,58,0,66,43,67},
{43,43,43,43,43,43,43,33,43,43,43,43,43,43,43,43,43,43,43,46,47,48,49,51,63,53,55,57,59,61,60,58,0,66,43,67},
{43,43,43,43,43,34,43,43,43,43,43,43,43,43,43,43,43,43,43,46,47,48,49,51,63,53,55,57,59,61,60,58,0,66,43,67},
{43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,35,43,43,43,46,47,48,49,51,63,53,55,57,59,61,60,58,0,66,43,67},
{43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,46,47,48,49,51,63,53,55,57,59,61,60,58,0,66,43,67},
{43,43,43,43,43,37,43,43,43,43,43,43,43,43,43,43,43,43,43,46,47,48,49,51,63,53,55,57,59,61,60,58,0,66,43,67},
{43,43,38,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,46,47,48,49,51,63,53,55,57,59,61,60,58,0,66,43,67},
{43,43,43,43,43,43,43,43,43,43,39,43,43,43,43,43,43,43,43,46,47,48,49,51,63,53,55,57,59,61,60,58,0,66,43,67},
{43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,46,47,48,49,51,63,53,55,57,59,61,60,58,0,66,43,67},
{43,43,43,43,43,43,43,43,43,43,43,43,43,41,43,43,43,43,43,46,47,48,49,51,63,53,55,57,59,61,60,58,0,66,43,67},
{43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,42,43,43,43,46,47,48,49,51,63,53,55,57,59,61,60,58,0,66,43,67},
{43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,46,47,48,49,51,63,53,55,57,59,61,60,58,0,66,43,67},
{43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,46,47,48,49,51,63,53,55,57,59,61,60,58,0,66,43,67},
{43,43,43,8,43,13,40,43,43,16,43,43,43,43,1,36,43,18,25,46,47,48,49,51,63,53,55,57,59,61,60,58,0,66,43,45},
{43,45,43,8,43,13,40,43,43,16,43,43,43,43,1,36,43,18,25,46,47,48,49,51,63,53,55,57,59,61,60,58,0,66,43,67},
{43,44,43,8,43,13,40,43,43,16,43,43,43,43,1,36,43,18,25,46,47,48,49,51,63,53,55,57,59,61,60,58,0,66,43,67},
{43,44,43,8,43,13,40,43,43,16,43,43,43,43,1,36,43,18,25,46,47,48,49,51,63,53,55,57,59,61,60,58,0,66,43,67},
{43,44,43,8,43,13,40,43,43,16,43,43,43,43,1,36,43,18,25,46,47,48,49,51,63,53,55,57,59,61,60,58,0,66,43,67},
{43,44,43,8,43,13,40,43,43,16,43,43,43,43,1,36,43,18,25,46,47,50,49,51,63,53,55,57,59,61,60,58,0,66,43,67},
{43,44,43,8,43,13,40,43,43,16,43,43,43,43,1,36,43,18,25,46,47,48,49,51,63,53,55,57,59,61,60,58,0,66,43,67},
{43,44,43,8,43,13,40,43,43,16,43,43,43,43,1,36,43,18,25,46,47,52,49,51,63,53,55,57,59,61,60,58,0,66,43,67},
{43,44,43,8,43,13,40,43,43,16,43,43,43,43,1,36,43,18,25,46,47,48,49,51,63,53,55,57,59,61,60,58,0,66,43,67},
{43,44,43,8,43,13,40,43,43,16,43,43,43,43,1,36,43,18,25,46,47,48,49,51,63,54,55,57,59,61,60,58,0,66,43,67},
{43,44,43,8,43,13,40,43,43,16,43,43,43,43,1,36,43,18,25,46,47,48,49,51,63,53,55,57,59,61,60,58,0,66,43,67},
{43,44,43,8,43,13,40,43,43,16,43,43,43,43,1,36,43,18,25,46,47,48,49,51,63,53,56,57,59,61,60,58,0,66,43,67},
{43,44,43,8,43,13,40,43,43,16,43,43,43,43,1,36,43,18,25,46,47,48,49,51,63,53,55,57,59,61,60,58,0,66,43,67},
{43,44,43,8,43,13,40,43,43,16,43,43,43,43,1,36,43,18,25,46,47,48,49,51,63,53,55,57,59,61,60,58,0,66,43,67},
{43,44,43,8,43,13,40,43,43,16,43,43,43,43,1,36,43,18,25,46,47,48,49,51,63,53,55,57,59,61,60,58,0,66,43,67},
{43,44,43,8,43,13,40,43,43,16,43,43,43,43,1,36,43,18,25,46,47,48,49,51,63,53,55,57,59,61,60,58,0,66,43,67},
{43,44,43,8,43,13,40,43,43,16,43,43,43,43,1,36,43,18,25,46,47,48,49,51,63,53,55,57,59,61,60,58,0,66,43,67},
{43,44,43,8,43,13,40,43,43,16,43,43,43,43,1,36,43,18,25,46,47,62,49,51,63,53,55,57,59,61,60,58,0,66,43,67},
{43,44,43,8,43,13,40,43,43,16,43,43,43,43,1,36,43,18,25,46,47,48,49,51,63,53,55,57,59,61,60,58,0,66,43,67},
{43,44,43,8,43,13,40,43,43,16,43,43,43,43,1,36,43,18,25,46,47,64,49,51,63,53,55,57,59,61,60,58,0,66,43,67},
{43,44,43,8,43,13,40,43,43,16,43,43,43,43,1,36,43,18,25,46,47,48,49,51,63,53,55,57,59,61,60,58,0,66,43,67},
{43,44,43,8,43,13,40,43,43,16,43,43,43,43,1,36,43,18,25,46,47,48,49,51,63,53,55,57,59,61,60,58,0,66,43,67},
{43,44,43,8,43,13,40,43,43,16,43,43,43,43,1,36,43,18,25,46,47,48,49,51,63,53,55,57,59,61,60,58,0,66,43,67},
{43,45,43,8,43,13,40,43,43,16,43,43,43,43,1,36,43,18,25,46,47,48,49,51,63,53,55,57,59,61,60,58,0,66,43,67}};

//this is the action table representing the finite number of actions for the finite number of states
int at[68][36]=
{
{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,301,302,305,303,324,600,600,600,401,402,404,405,406,0,600,600,600},
{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,-1,100},
{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,-1,100},
{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,-1,100},
{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,-1,100},
{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,-1,100},
{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,-1,100},
{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,501,501,501,501,501,501,501,501,501,501,501,501,501,501,501,-1,501},
{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,-1,100},
{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,-1,100},
{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,-1,100},
{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,-1,100},
{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,502,502,502,502,502,502,502,502,502,502,502,502,502,502,502,-1,502},
{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,-1,100},
{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,-1,100},
{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,503,503,503,503,503,503,503,503,503,503,503,503,503,503,503,-1,503},
{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,-1,100},
{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,504,504,504,504,504,504,504,504,504,504,504,504,504,504,504,-1,504},
{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,-1,100},
{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,-1,100},
{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,-1,100},
{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,505,505,505,505,505,505,505,505,505,505,505,505,505,505,505,-1,505},
{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,-1,100},
{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,-1,100},
{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,506,506,506,506,506,506,506,506,506,506,506,506,506,506,506,-1,506},
{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,-1,100},
{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,-1,100},
{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,-1,100},
{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,-1,100},
{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,507,507,507,507,507,507,507,507,507,507,507,507,507,507,507,-1,507},
{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,-1,100},
{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,-1,100},
{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,-1,100},
{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,-1,100},
{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,-1,100},
{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,508,508,508,508,508,508,508,508,508,508,508,508,508,508,508,-1,508},
{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,-1,100},
{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,-1,100},
{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,-1,100},
{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,509,509,509,509,509,509,509,509,509,509,509,509,509,509,509,-1,509},
{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,-1,100},
{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,-1,100},
{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,510,510,510,510,510,510,510,510,510,510,510,510,510,510,510,-1,510},
{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,-1,100},
{200,200,200,200,200,200,200,200,200,200,200,200,200,200,200,200,200,200,200,200,200,200,200,200,200,200,200,200,200,200,200,200,200,200,200,-1},
{200,200,200,200,200,200,200,200,200,200,200,200,200,200,200,200,200,200,200,200,200,200,200,200,200,200,200,200,200,200,200,200,200,200,200,200},
{301,301,301,301,301,301,301,301,301,301,301,301,301,301,301,301,301,301,301,301,301,301,301,301,301,301,301,301,301,301,301,301,301,301,301,301},
{302,302,302,302,302,302,302,302,302,302,302,302,302,302,302,302,302,302,302,302,302,302,302,302,302,302,302,302,302,302,302,302,302,302,302,302},
{305,305,305,305,305,305,305,305,305,305,305,305,305,305,305,305,305,305,305,305,305,305,305,305,305,305,305,305,305,305,305,305,305,305,305,305},
{303,303,303,303,303,303,303,303,303,303,303,303,303,303,303,303,303,303,303,303,303,-1,303,303,303,303,303,303,303,303,303,303,303,303,303,303},
{307,307,307,307,307,307,307,307,307,307,307,307,307,307,307,307,307,307,307,307,307,307,307,307,307,307,307,307,307,307,307,307,307,307,307,307},
{304,304,304,304,304,304,304,304,304,304,304,304,304,304,304,304,304,304,304,304,304,-1,304,304,304,304,304,304,304,304,304,304,304,304,304,304},
{308,308,308,308,308,308,308,308,308,308,308,308,308,308,308,308,308,308,308,308,308,308,308,308,308,308,308,308,308,308,308,308,308,308,308,308},
{600,600,600,600,600,600,600,600,600,600,600,600,600,600,600,600,600,600,600,600,600,600,600,600,600,-1,600,600,600,600,600,600,600,600,600,600},
{309,309,309,309,309,309,309,309,309,309,309,309,309,309,309,309,309,309,309,309,309,309,309,309,309,309,309,309,309,309,309,309,309,309,309,309},
{600,600,600,600,600,600,600,600,600,600,600,600,600,600,600,600,600,600,600,600,600,600,600,600,600,600,-1,600,600,600,600,600,600,600,600,600},
{310,310,310,310,310,310,310,310,310,310,310,310,310,310,310,310,310,310,310,310,310,310,310,310,310,310,310,310,310,310,310,310,310,310,310,310},
{401,401,401,401,401,401,401,401,401,401,401,401,401,401,401,401,401,401,401,401,401,401,401,401,401,401,401,401,401,401,401,401,401,401,401,401},
{406,406,406,406,406,406,406,406,406,406,406,406,406,406,406,406,406,406,406,406,406,406,406,406,406,406,406,406,406,406,406,406,406,406,406,406},
{402,402,402,402,402,402,402,402,402,402,402,402,402,402,402,402,402,402,402,402,402,402,402,402,402,402,402,402,402,402,402,402,402,402,402,402},
{405,405,405,405,405,405,405,405,405,405,405,405,405,405,405,405,405,405,405,405,405,405,405,405,405,405,405,405,405,405,405,405,405,405,405,405},
{404,404,404,404,404,404,404,404,404,404,404,404,404,404,404,404,404,404,404,404,404,-1,404,404,404,404,404,404,404,404,404,404,404,404,404,404},
{403,403,403,403,403,403,403,403,403,403,403,403,403,403,403,403,403,403,403,403,403,403,403,403,403,403,403,403,403,403,403,403,403,403,403,403},
{600,600,600,600,600,600,600,600,600,600,600,600,600,600,600,600,600,600,600,600,600,-1,600,600,600,600,600,600,600,600,600,600,600,600,600,600},
{306,306,306,306,306,306,306,306,306,306,306,306,306,306,306,306,306,306,306,306,306,306,306,306,306,306,306,306,306,306,306,306,306,306,306,306},
{600,600,600,600,600,600,600,600,600,600,600,600,600,600,600,600,600,600,600,600,600,600,600,600,600,600,600,600,600,600,600,600,600,600,600,600},
{600,600,600,600,600,600,600,600,600,600,600,600,600,600,600,600,600,600,600,600,600,600,600,600,600,600,600,600,600,600,600,600,600,600,600,600},
{600,-1,600,600,600,600,600,600,600,600,600,600,600,600,600,600,600,600,600,600,600,600,600,600,600,600,600,600,600,600,600,600,600,600,600,600}};


int cate[256];//array for the categories
int i;
int curr=0;

for(i=0;i<256;i++)
{
  cate[i]=33;// sets every thing to the misc category
}
//*******************SET SPECIF CAETGRIOES************************//
cate['0']=1;
cate['1']=1;
cate['2']=1;
cate['3']=1;
cate['4']=1;
cate['5']=1;
cate['6']=1;
cate['7']=1;
cate['8']=1;
cate['9']=1;
cate['A']=2;
cate['B']=3;
cate['C']=0;
cate['D']=4;
cate['E']=5;
cate['F']=6;
cate['G']=7;
cate['H']=8;
cate['I']=9;
cate['J']=0;
cate['K']=0;
cate['L']=10;
cate['M']=11;
cate['N']=12;
cate['O']=13;
cate['P']=14;
cate['Q']=0;
cate['R']=15;
cate['S']=16;
cate['T']=17;
cate['U']=0;
cate['V']=0;
cate['W']=18;
cate['X']=0;
cate['y']=0;
cate['Z']=0;
cate['+']=19;
cate['-']=20;
cate['=']=21;
cate['<']=22;
cate['>']=23;
cate['!']=24;
cate['&']=25;
cate['|']=26;
cate[';']=27;
cate[',']=28;
cate[':']=29;
cate['?']=30;
cate['^']=31;
cate[' ']=32;
cate['\n']=32;
cate['\t']=32;
cate['.']=35;
cate['%']=34;
cate['_']=34;

char input;
char last;
int lastint;
cin.get(input);//get the input

while(!cin.eof())//read till no input
{
last=input;
switch(at[curr][cate[input]])// a switch statement to switch between the different cases
{

case 0:
curr=st[curr][cate[input]];
cin.get(input);
break;//break out of the case

case -1:// The -1 case
curr=st[curr][cate[input]];
cin.get(input);
break;

case 100:// The 100 case
curr=0;
cin.get(input);
cout<<100<<endl;
if(cate[last]==27)
{
  cout<<401<<endl;
}
break;

case 200:
curr=0;
cin.get(input);
cout<<200<<endl;
break;

case 301:
curr=0;
cin.get(input);
cout<<301<<endl;
break;

case 302:
curr=0;
cin.get(input);
cout<<302<<endl;
break;

case 303:
curr=0;
cin.get(input);
if(cate[input]==21)
{
  cout<<307<<endl;
  cin.get(input);
}
else
{
  cout<<303<<endl;
}

break;

case 304:
curr=0;
cin.get(input);
if(cate[input]==21)
{
  cout<<308<<endl;
  cin.get(input);
}
else
{
  cout<<304<<endl;
}
break;

case 305:
curr=0;
cin.get(input);
cout<<305<<endl;
break;

case 306:
curr=0;
cin.get(input);
cout<<306<<endl;
break;

case 401:
curr=0;
cin.get(input);
cout<<401<<endl;
break;

case 402:
curr=0;
cin.get(input);
cout<<402<<endl;
break;

case 404:
curr=0;
cin.get(input);
if(cate[input]==21)
{
  cout<<403<<endl;
  cin.get(input);
}
else
{
  cout<<404<<endl;
}
break;

case 405:
curr=0;
cin.get(input);
cout<<405<<endl;
break;

case 406:
curr=0;
cin.get(input);
cout<<406<<endl;
break;

case 501:
curr=0;
cin.get(input);
cout<<501<<endl;
if(cate[last]==27)
{
  cout<<401<<endl;
}

break;

case 502:
curr=0;
cin.get(input);
cout<<502<<endl;
if(cate[last]==27)
{
  cout<<401<<endl;
}
break;

case 503:
curr=0;
cin.get(input);
cout<<503<<endl;
if(cate[last]==27)
{
  cout<<401<<endl;
}
break;

case 504:
curr=0;
cin.get(input);
cout<<504<<endl;
if(cate[last]==27)
{
  cout<<401<<endl;
}
break;

case 505:
curr=0;
cin.get(input);
cout<<505<<endl;
if(cate[last]==27)
{
  cout<<401<<endl;
}
break;

case 506:
curr=0;
cin.get(input);
cout<<506<<endl;
if(cate[last]==27)
{
  cout<<401<<endl;
}
break;

case 507:
curr=0;
cin.get(input);
cout<<507<<endl;
if(cate[last]==27)
{
  cout<<401<<endl;
}
break;

case 508:
curr=0;
cin.get(input);
cout<<508<<endl;
if(cate[last]==27)
{
  cout<<401<<endl;
}
break;

case 509:
curr=0;
cin.get(input);
cout<<509<<endl;
if(cate[last]==27)
{
  cout<<401<<endl;
}
break;

case 510:
curr=0;
cin.get(input);
cout<<510<<endl;
if(cate[last]==27)
{
  cout<<401<<endl;
}
break;

case 600:
curr=0;
cin.get(input);
if((cate[last]==26)&& (cate[input]==26))
{
  cout<<310<<endl;
  cin.get(input);
}
else if((cate[last]==25)&& (cate[input]==25))
{
  cout<<309<<endl;
  cin.get(input);
}
else if((cate[last]==24)&& (cate[input]==21))
{
  cout<<306<<endl;
  cin.get(input);
}
else
{
  cout<<600<<endl;
}
break;
}
  }

  return 0;// end of the program
  }
